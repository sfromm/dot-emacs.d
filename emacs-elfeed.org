#+TITLE: Elfeed: RSS Reader
#+PROPERTY: header-args :tangle ~/.emacs.d/site-lisp/emacs-elfeed.el

* Elfeed

[[https://github.com/skeeto/elfeed][Elfeed]] is a web feed (ATOM and RSS) reader for Emacs.

#+BEGIN_SRC emacs-lisp
  (use-package elfeed
    :ensure elfeed
    :config
    (progn
      (defun sf/elfeed-search-starred ()
        "Show starred elfeed articles"
        (interactive)
        (elfeed-search-set-filter "@6-months-ago +starred"))

      (defalias 'sf/elfeed-search-toggle-starred (elfeed-expose #'elfeed-search-toggle-all 'starred))

      (defun sf/elfeed-show-toggle-starred ()
        "Toggle starred tag for elfeed article"
        (interactive)
        (sf/elfeed-show-toggle-tag 'starred))

      (defun sf/elfeed-show-toggle-tag (tag)
        "Toggle tag for elfeed article"
        (interactive)
        (if (elfeed-tagged-p tag elfeed-show-entry)
          (elfeed-show-untag tag)
          (elfeed-show-tag tag)))

      (defun sf/elfeed-update ()
        "Update elfeed database"
        (message "Updating elfeed articles...")
        (elfeed-update)
        )

      (defface elfeed-search-starred-title-face
        '((t :foreground "#f77"))
        "Marks a starred Elfeed entry.")
      (push '(starred elfeed-search-starred-title-face) elfeed-search-face-alist)

      (setq elfeed-feeds
        '(("http://codeascraft.com/feed/" devops)
           ("http://endlessparentheses.com/atom.xml" emacs)
           ("http://planet.emacsen.org/atom.xml" emacs)
           ("http://oremacs.com/atom.xml" emacs)
           ("http://pragmaticemacs.com/feed/" emacs)
           ("http://mbork.pl/?action=rss" emacs )
           ("http://www.howardism.org/index.xml" emacs )
           ("http://feeds.feedburner.com/TheKitchinResearchGroup" emacs )
           ("http://sachachua.com/blog/feed" emacs )
           ("http://blog.aaronbieber.com/feed.xml" emacs )
           ("https://www.masteringemacs.org/feed" emacs )
           ("http://karl-voit.at/feeds/lazyblorg-all.atom_1.0.links-and-content.xml" emacs)
           ("http://planetsysadmin.com/atom.xml" devops)
           ("https://feeds.feedburner.com/sysadvent" devops)
           ("https://blog.miguelgrinberg.com/feed" devops python)
           ("http://planetpython.org/rss20.xml" devops python)
           ("http://fedoraplanet.org/atom.xml" linux fedora)
           ("http://planet.centos.org/atom.xml" linux centos)
           ("http://kernelplanet.org/rss20.xml" linux )
           ("http://planet.freedesktop.org/rss20.xml" linux )
           ("http://devopsreactions.tumblr.com/rss" devops fun)
           ("http://feeds.networklore.com/Networklore" netops )
           ("http://etherealmind.com/feed/" netops)
           ("http://xkcd.com/atom.xml" comics fun)
           ("https://what-if.xkcd.com/feed.atom" fun)
           ("http://americasgreatoutdoors.tumblr.com/rss" fun)
           )
        url-queue-timeout 30
        elfeed-db-directory (concat user-emacs-directory "user/elfeed")
        )
      (setq elfeed-update-timer (run-at-time 180 (* 120 60) 'sf/elfeed-update) ) ; create timer to update elfeed
      (dolist (mode '(elfeed-show-mode elfeed-search-mode))
        (evil-set-initial-state mode 'emacs))
      )
      :bind (
              :map elfeed-search-mode-map
              ("f" . sf/elfeed-search-toggle-starred)
              ("F" . sf/elfeed-search-starred)
              :map elfeed-show-mode-map
              ("f" . sf/elfeed-show-toggle-starred) )
    )
#+END_SRC

* Postamble

Finally, offer module for use.

#+BEGIN_SRC emacs-lisp
(provide 'emacs-elfeed)
#+END_SRC
