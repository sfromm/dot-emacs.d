#+TITLE: Emacs & Git Integration
#+PROPERTY: header-args :tangle ~/.emacs.d/site-lisp/setup-git.el

* Magit

I use [[http://magit.github.io/][magit]], the emacs mode for [[http://git-scm.com/][git]].  It can be used to review diffs,
commit, push changes, and other things.  Documentation is available in
_info_ and [[http://magit.github.io/master/magit.html][online]].  This also installs [[https://github.com/pidu/git-timemachine][git-timemachine]], a way of
navigating a file's history in [[http://git-scm.com/][git]].

#+BEGIN_SRC emacs-lisp
  (use-package magit
    :ensure t
    :init
    (progn
      (setq
        magit-push-always-verify nil
        magit-completing-read-function 'ivy-completing-read
        magit-last-seen-setup-instructions "1.4.0")
      (dolist (mode '(magit-mode magit-popup-mode magit-diff-mode))
        (evil-set-initial-state mode 'emacs))
      )
    :commands magit-status
    :bind ("C-x g" . magit-status))
  (sf/package-install 'git-timemachine)
#+END_SRC


* Git Annex

[[http://git-annex.branchable.com][git-annex]] allows managing files with git, without checking the file
contents into git.  The /git-annex/ website has a page discussing [[http://git-annex.branchable.com/not/][what it is not]].
While it isn't directly a backup system, dropbox clone, or unison
replacement, it has a lot of the functionality of those tools.

The /git-annex/ website has a page documenting [[http://git-annex.branchable.com/install/][how to install]].

** Setting up first repository

The following is a just a synopsis of what is available in the
/git-annex/ [[http://git-annex.branchable.com/walkthrough/][walkthrough]].  Refer to that for details.  There is also the 
[[http://git-annex.branchable.com/git-annex/][man-page]] for extended documentation.

The first steps:

#+BEGIN_EXAMPLE
$ mkdir ~/annex
$ cd ~/annex
$ git init
$ git annex init "laptop"
#+END_EXAMPLE

You can then start adding files:

#+BEGIN_EXAMPLE
$ git annex add mastering-emacs-v2.pdf
add mastering-emacs-v2.pdf ok
(recording state in git...)
#+END_EXAMPLE

After adding the file, you can see that the file is now a symlink to
=.git/annex/objects=.

#+BEGIN_EXAMPLE
$ ls -l mastering-emacs-v2.pdf
lrwxr-xr-x  1 stephenf  staff  207 Oct 13 09:59 mastering-emacs-v2.pdf@ -> ../../../.git/annex/objects/XJ/ZZ/SHA256E-s1592548--9080f4fd92773e2e662755a3d2c726e53d01bef3b6b12a13319fceefda77c5c1.pdf/SHA256E-s1592548--9080f4fd92773e2e662755a3d2c726e53d01bef3b6b12a13319fceefda77c5c1.pdf
#+END_EXAMPLE

** Setting up your second repository

The next step is to add a second repository.  As a refresher, the goal
is to replicate files to multiple locations.

Assuming we have a USB drive connected ...

#+BEGIN_EXAMPLE
$ cd /media/usb
$ git clone ~/annex
$ cd annex
$ git annex init "usb drive"
$ git remote add laptop ~/annex
$ cd ~/annex
$ git remote add usb /media/usb/annex
#+END_EXAMPLE

Or, as an alternative ...

#+BEGIN_EXAMPLE
$ mkdir /media/usb/annex
$ cd /media/usb/annex
$ git init
$ git annex init "usb drive"
$ git remote add laptop ~/annex
$ cd ~/annex
$ git remote add usb /media/usb/annex
#+END_EXAMPLE

** Emacs integration

There are a couple packages that offer integration:

- [[https://github.com/jwiegley/git-annex-el][git-annex-el]]
  - Typing =C-x C-q= in an annexed file buffer will cause Emacs to run
    =git annex edit=.  When the buffer is killed, Emacs will run 
    =git annex add && git commit -m updated=
  - Dired is also extended to not show annex symlinks, but to color
    annexed files green.  You then have the commands available:
    - =@ a= Add file to git-annex
    - =@ e= Edit an annexed file
- [[https://github.com/magit/magit-annex][magit-annex]]
  - The annex subcommand prefix for magit is =@=

#+BEGIN_SRC emacs-lisp
(use-package git-annex)

(use-package magit-annex)
#+END_SRC

* Postamble

Finally, offer module for use.

#+BEGIN_SRC emacs-lisp
(provide 'setup-git)
#+END_SRC

* License

This document is licensed under the GNU Free Documentation License
version 1.3 or later (http://www.gnu.org/copyleft/fdl.html).

#+BEGIN_SRC 
Copyright (C) 2017 Stephen Fromm

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.

Code in this document is free software: you can redistribute it
and/or modify it under the terms of the GNU General Public
License as published by the Free Software Foundation, either
version 3 of the License, or (at your option) any later version.

This code is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
#+END_SRC
